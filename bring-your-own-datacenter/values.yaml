byodc:
  # set docker image and tag for the byodc
  image:
    name: ghcr.io/fiskaltrust/byodc
    # use to override the default version
    tag: 1.3-bullseye
    pullSecret: false
  # proxy string for the byodc pod (see https://link.fiskaltrust.cloud/rollout/proxy)
  proxy: null
  # configuration settings for the byodc
  config:
    # sets the nodeSelector property of the byodc pods https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector
    nodeSelector: {}
    redis:
      # hostname of the redis instance (only change if using external redis instance)
      host: redis.{{ .Release.Namespace }}
      # port of the redis instance (also sets the port for the internal redis instance)
      port: 6379
      channel: byodc
    applicationInsights:
      instrumentationKey: null
    # LogLevel of the byodc logs
    logLevel: Information
    # helipad used by the byodc
    helipad:
      baseUrl: https://helipad-sandbox.fiskaltrust.cloud
    # PosApiPrint used by the byodc
    posApi:
      baseUrl: https://pos-api-sandbox.fiskaltrust.cloud
    # number of byodc instances
    replicas: 10
    # pod limits
    limits:
      cpu: 500m
      memory: 1000Mi
    # http timeouts
    timeout:
      all: 900_000
      connect: 15_000
    # array of environment variables (see https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.22/#envvar-v1-core) for the byodc deployment
    env: null

fcc:
  # Set docker image and tag for the fcc
  image:
    name: fscloudapps.azurecr.io/servicestack/fiskal-cloud-connector
    # use to override the default version
    tag: latest
    pullSecret: false
  # configuration settings for the fcc
  config:
    # sets the nodeSelector property of the fcc pods https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector
    nodeSelector: {}
    # pod limits
    limits:
      cpu: 1000m
      memory: 1500Mi
    # http timeouts
    # array of environment variables (see https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.22/#envvar-v1-core) for the byodc deployment
    env: null
    storage:
      # storageClassName to use in the persistentVolumeClaim
      class: ""
      # storage capacity to request in the persistentVolumeClaim
      capacity: 1Gi
  instances: []

redis:
  # enable redis
  enabled: true
  config:
    # sets the nodeSelector property of the redis pod https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector
    nodeSelector: {}

loadbalancer:
  config:
    # tls config. see https://www.getambassador.io/docs/latest/howtos/tls-termination/#create-a-self-signed-certificate for information about `cert` and `key` files.
    # you can use `--set-file loadbalancer.config.tls.crt="./cert.pem"` to pass files to the helm command. please make sure the files start with `-----BEGIN [...]`.
    # the cert file may also contain intermediate certificates
    tls:
      # set cert as base64 encoded file contents
      crtBase64: null
      # set key as base64 encoded file contents
      keyBase64: null
      # set cert as file contents
      crt: null
      # set key as file contents
      key: null

# configuration for the emissary load balancer
emissary:
  # if the emissary custom ressources are deployed
  use: true
  # if tls is enabled
  tls: false
  # hostname by which emissary is reachable
  hostname: "*"

prometheus:
  # deploys monitoring.coreos.com/v1 `ServiceMonitor` for byodc pods. can be used with https://github.com/prometheus-operator/prometheus-operator
  deployServiceMonitor: false
